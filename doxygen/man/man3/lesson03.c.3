.TH "/home/thierry/Sources/Opengl/Lesson03/src/lesson03.c" 3 "Thu Mar 23 2023" "Version 2.1.0" "Lesson03 (from NeHe)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/thierry/Sources/Opengl/Lesson03/src/lesson03.c \- Ouvre une simple fenêtre Wayland on Linux et dessine deux formes simples : un triangle multicolore et un carré bleu avec OpenGL + glut\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <GL/glut\&.h>\fP
.br
\fC#include <GL/gl\&.h>\fP
.br
\fC#include <GL/glu\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include 'logger\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB_XOPEN_SOURCE\fP   600"
.br
.ti -1c
.RI "#define \fBESCAPE\fP   27"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBInitGL\fP (int Width, int Height)"
.br
.RI "Fonction InitGL : fonction gerant les caractéristiques de base de la scéne lorsque avec des instructions OpenGL (arrière plan, profondeur, type de profondeur, \&.\&.\&.) "
.ti -1c
.RI "void \fBReSizeGLScene\fP (int Width, int Height)"
.br
.RI "Fonction ReSizeGLScene : fonction gerant les nouvelles dimensions de la scéne lorsque l'utilisateur agit sur un redimensionnement de la fenêtre\&. "
.ti -1c
.RI "void \fBDrawGLScene\fP ()"
.br
.RI "Fonction DrawGLScene : fonction generant l'affichage attendu avec des instructions OpenGL\&. "
.ti -1c
.RI "void \fBkeyPressed\fP (unsigned char key, int x, int y)"
.br
.RI "Fonction keyPressed : fonction permettant de connaître quelle touche a été tapée au clavier\&. "
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.RI "Programme Main obligatoire pour les programmes sous Linux (OpenGL en mode console)\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char * \fBlevel_debug\fP"
.br
.ti -1c
.RI "int \fBwindow\fP"
.br
.ti -1c
.RI "int \fBnFullScreen\fP =0"
.br
.in -1c
.SH "Detailed Description"
.PP 
Ouvre une simple fenêtre Wayland on Linux et dessine deux formes simples : un triangle multicolore et un carré bleu avec OpenGL + glut\&. 

Comments manageable by Doxygen
.PP
Modified smoothly by Thierry DECHAIZE
.PP
Paradigm : obtain one source (only one !) compatible for multiple free C Compilers and provide for all users an development environment on Linux (64 bits compatible), the great Code::Blocks manager (version 20\&.03), and don't use glaux\&.lib or glaux\&.dll\&.
.PP
a) gcc 11\&.3\&.0 (32 and 64 bits) version officielle : commande pour l'installation sur Linux Mint -> sudo apt-get install freeglut3 libglew-dev gcc g++ mesa-common-dev build-essential libglew2\&.2 libglm-dev binutils libc6 libc6-dev ; option -m32 to 32 bits ; no option to 64 bits b) CLANG version 14\&.0\&.6 (32 et 64 bits), adossé aux environnements gcc : commande pour l'installation sur Linux Mint -> sudo apt-get install llvm clang ; options pour la compilation et l'édition de liens -> --target=i686-pc-linux-gnu (32 bits) --target=x86_64-pc-linux-gnu (64 bits) c) Mingw 32 ou 64 bits version gcc version 10-win32 20220113 : commande pour l'installation sur Linux Mint -> sudo apt-get install mingw64 (ATTENTION, il s'agit d'une cross génération : l'exécutable créé ne fonctionne que sur Windows !!!)
.PP
Date : 2022/12/28
.PP
\fBAuthor\fP
.RS 4
Jeff Molofee ( NeHe ) originely, adapted by Richard Campbell, and after by Thierry Dechaize 
.RE
.PP
\fBVersion\fP
.RS 4
2\&.0\&.1\&.0 
.RE
.PP
\fBDate\fP
.RS 4
28 décembre 2022
.RE
.PP
Ce programme gére plusieurs événements : le clic sur le bouton 'Fermé' de la fenêtre, la sortie par la touche ESC ou par les touches 'q' ou 'Q' [Quit]
.PP
l'appui sur les touches 'f' ou 'F' qui active ou non le 'Full Screen' en mode flip-flop\&. 
.SH "Macro Definition Documentation"
.PP 
.SS "#define _XOPEN_SOURCE   600"

.SS "#define ESCAPE   27"

.SH "Function Documentation"
.PP 
.SS "void DrawGLScene ()"

.PP
Fonction DrawGLScene : fonction generant l'affichage attendu avec des instructions OpenGL\&. This function generate the scene with injstructions OpenGL
.PP
Aucun paramètre dans ce cas de figure car tout est géré directement à l'intérieur de cette fonction d'affichage\&. 
.PP
\fBReturns\fP
.RS 4
void aucun retour\&. 
.RE
.PP

.SS "void InitGL (int Width, int Height)"

.PP
Fonction InitGL : fonction gerant les caractéristiques de base de la scéne lorsque avec des instructions OpenGL (arrière plan, profondeur, type de profondeur, \&.\&.\&.) This function initialize the basics characteristics of the scene with instructions OpenGL (background, depth, type of depth, reset of the projection matrix, \&.\&.\&.)
.PP
En retour les deux paramètres des nouvelles valeurs de largeur et de hauteur de la fenêtre redimensionnée\&. 
.PP
\fBParameters\fP
.RS 4
\fIWidth\fP la largeur de la fenêtre lors de l'initialisation * 
.br
\fIHeight\fP la hauteur de la fenêtre lors de l'initialisation * 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour\&. 
.RE
.PP

.SS "void keyPressed (unsigned char key, int x, int y)"

.PP
Fonction keyPressed : fonction permettant de connaître quelle touche a été tapée au clavier\&. This function inform caller with key pressed\&.
.PP
Le premier paarmètre en retour de cette fonction correspond à la touche précédemment appuyée\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP la touche appuyée * 
.br
\fIx\fP une position x au niveau du clavier * 
.br
\fIy\fP une position y au niveau du clavier * 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour\&. 
.RE
.PP

.SS "int main (int argc, char ** argv)"

.PP
Programme Main obligatoire pour les programmes sous Linux (OpenGL en mode console)\&. Comments manageable by Doxygen
.PP
Programme principal de lancement de l'application qui appelle ensuite toutes les fonctions utiles OpenGL et surtout glut\&. 
.PP
\fBParameters\fP
.RS 4
\fIargc\fP le nombre de paramètres de la ligne de commande\&. 
.br
\fIargv\fP un pointeur sur le tableau des différents paramètres de la ligne de commande\&. 
.RE
.PP
\fBReturns\fP
.RS 4
int un entier permettant de connaître la statut du lancement du programme\&. 
.RE
.PP
This Code initialize the context of windows on Wayland with glut\&.
.PP
L'appel de la fonction glutInit : fonction Glut d'initialisation
.PP
En entrée de cette fonction, les paramètres de la ligne de commande\&. 
.PP
\fBParameters\fP
.RS 4
\fIargc\fP le nombre de paramètres mis à disposition * 
.br
\fIargv\fP Hle tableau des différents paramètres mis à disposition * 
.RE
.PP
\fBReturns\fP
.RS 4
int un integer\&.
.RE
.PP
This Code initialize le mode d'affichage défini avec une fonction glut\&.
.PP
L'appel de la fonction glutInitDisplayMode(: fonction Glut initialisant le mode d'affichage\&.
.PP
En entrée de cette fonction, des paramètres séparés par des 'ou logique'\&. 
.PP
\fBParameters\fP
.RS 4
\fIconst\fP une succession deparamètres séparés par des 'ou logique'\&. 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP
This Code initialize the dimensions (width & height) of the window into screen\&.
.PP
L'appel de la fonction glutInitWindowSize : fonction Glut initialisant la position de la fenêtre dans l'écran\&.
.PP
En entrée de cette fonction, les deux paramètres X et Y correspondant à la taille de la fenêtre dans l'écran (deux dimensions) 
.PP
\fBParameters\fP
.RS 4
\fIX\fP la largeur de la fenêtre en x 
.br
\fIY\fP la hauteur de la fenêtre en y 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP
This Code initialize the position of the window into screen\&.
.PP
L'appel de la fonction glutInitWindowPosition : fonction Glut initialisant la position de la fenêtre dans l'écran\&.
.PP
En entrée de cette fonction, les deux paramètres X et Y de positionnement de la fenêtre dans l'écran (deux dimensions) 
.PP
\fBParameters\fP
.RS 4
\fIX\fP le positionnement de la fenêtre en x 
.br
\fIY\fP le positionnement de la fenêtre en y 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP
This Code create windows on Wayland with glut\&.
.PP
L'appel de la fonction glutCreateWindow : fonction Glut créant une fenêtre\&.
.PP
En entrée de cette fonction, l'identification de la fenêtre (\&.id\&. son nom)\&. 
.PP
\fBParameters\fP
.RS 4
\fItittle\fP le nom de la fenêtre 
.RE
.PP
\fBReturns\fP
.RS 4
int l'identifiant entier de la fenêtre créee\&.
.RE
.PP
This Code rely the internal function DrawGLScene at the display function of glut\&.
.PP
L'appel de la fonction glutDisplayFunc : fonction Glut permettant d'activer la fonction interne d'affichage\&.
.PP
En entrée de cette fonction, l'adresse de la fonction interne appellée \&. 
.PP
\fBParameters\fP
.RS 4
\fI&function\fP l'adresse de la fonction interne d'affichage\&. 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP
This Code rely the internal function DrawGLScene at the Idle Function of glut\&.
.PP
L'appel de la fonction glutIdleFunc : fonction d'attente de Glut permettant d'activer la fonction interne d'affichage\&.
.PP
En entrée de cette fonction, l'adresse de la fonction interne appellée \&. 
.PP
\fBParameters\fP
.RS 4
\fI&function\fP l'adresse de la fonction interne d'affichage\&. 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP
This Code rely the internal function ResizeGLScene at the reshape function of glut\&.
.PP
L'appel de la fonction glutReshapeFunc : fonction Glut permettant d'activer la fonction interne de changement des dimensions d'affichage\&.
.PP
En entrée de cette fonction, l'adresse de la fonction interne appellée\&. 
.PP
\fBParameters\fP
.RS 4
\fI&function\fP l'adresse de la fonction interne traitant des changements de dimension de l'affichage\&. 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP
This Code give pressed key used by this program\&.
.PP
L'appel de la fonction glutKeyboardFunc : fonction Glut permettant de recupérer la touche appuyée\&.
.PP
En entrée de cette fonction, l'adresse de la touche appuyée\&. 
.PP
\fBParameters\fP
.RS 4
\fI&key\fP l'adresse de la touche appuyée sur le clavier\&. 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP
This Code initialize les paramètres d'affichage OpenGL\&.
.PP
L'appel de la fonction InitGL : fonction d'initialisation dde la taille de la fenêtre d'affichage OpenGL (la même que celle de glut)\&.
.PP
En entrée de cette fonction, les deux paramètres X et Y correspondant à la taille de la fenêtre OpenGL dans l'écran (deux dimensions) 
.PP
\fBParameters\fP
.RS 4
\fIX\fP la largeur de la fenêtre en x 
.br
\fIY\fP la hauteur de la fenêtre en y 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP
This Code run the permanently wait loop of events\&.
.PP
L'appel de la fonction glutMainLoop : fonction lancant la boucle d'attente des événements sous glut\&.
.PP
Aucun paramètre en entrée ni en sortie\&. 
.PP
\fBReturns\fP
.RS 4
void aucun retour de fonction\&.
.RE
.PP

.SS "void ReSizeGLScene (int Width, int Height)"

.PP
Fonction ReSizeGLScene : fonction gerant les nouvelles dimensions de la scéne lorsque l'utilisateur agit sur un redimensionnement de la fenêtre\&. This function manage the new dimension of the scene when resize of windows with instructions OpenGL
.PP
En retour les deux paramètres des nouvelles valeurs de largeur et de hauteur de la fenêtre redimensionnée\&. 
.PP
\fBParameters\fP
.RS 4
\fIWidth\fP la nouvelle largeur de la fenêtre redimensionnée * 
.br
\fIHeigth\fP la nouvelle hauteur de la fenêtre redimensionnée * 
.RE
.PP
\fBReturns\fP
.RS 4
void aucun retour\&. 
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "char* level_debug"

.SS "int nFullScreen =0"

.SS "int window"

.SH "Author"
.PP 
Generated automatically by Doxygen for Lesson03 (from NeHe) from the source code\&.
